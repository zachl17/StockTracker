@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.DropDowns
@using StockTracker.Data

@inject IHttpClientFactory _clientFactory
@inject NavigationManager NavManager
@inject StockService _stockService

<nav class="navbar navbar-dark bg-dark">
    <div class="container-fluid">
        <a class="navbar-brand">Stock Tracker</a>
        <LoginDisplay />
        <EditForm Model="@model" OnValidSubmit="@OnValidSubmit" OnInvalidSubmit="@OnInvalidSubmit">
            <DataAnnotationsValidator />
            <div>
                <SfAutoComplete TValue="string" TItem="StockModel" @bind-Value="@model.Symbol" Placeholder="Search..." DataSource="@stockList" AllowCustom="false">
                    <AutoCompleteFieldSettings Value="Symbol" />
                </SfAutoComplete>
                <ValidationMessage For="()=>model.Symbol" />
            </div>
            <div class="sfButton">
                <SfButton type="submit" IsPrimary="true">Submit</SfButton>
            </div>
        </EditForm>
    </div>
</nav>

@code {
    private StockModel model = new StockModel();
    List<StockModel> stockList;
    string errorString;

    protected override async Task OnInitializedAsync()
    {
        stockList = await _stockService.GetStockSymbols();
    }
    void OnValidSubmit()
    {
        NavManager.NavigateTo($"/stock/{model.Symbol}");
        //await Task.Delay(2000);
        //model.Symbol = null;
        //StateHasChanged();
    }
    private void OnInvalidSubmit()
    {

    }
}
